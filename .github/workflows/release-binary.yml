name: Release

on:
  push:
    tags:
      - v[0-9]+.*

jobs:
  create-release:
    runs-on: ubuntu-latest
    permissions: write-all
    steps:
      - uses: actions/checkout@v2
      - uses: taiki-e/create-gh-release-action@v1
        # with:
        #   # (optional) Path to changelog.
        #   # changelog: CHANGELOG.md
        env:
          # (required) GitHub token for creating GitHub Releases.
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  upload-assets:
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
          # - macos-latest
          # - windows-latest
    runs-on: ${{ matrix.os }}
    if: github.repository_owner == 'elsuizo'
    needs:
      - create-release
    steps:
      - uses: actions/checkout@v2
      # - uses: taiki-e/github-actions/install-rust@main
      #   with:
      #     toolchain: ${{ matrix.rust || 'nightly' }}
      #     toolchain: ${{ matrix.rust || 'wasm32-unknown-unknown' }}
      - name: Update Linux Repositories
        # run: sudo apt-get update
        run: rustup update nightly
        run: rustup target add wasm32-unknown-unknown --toolchain nightly
        if: startsWith(matrix.os, 'ubuntu')
      - name: Install Ubuntu dependencies
        run: |
          sudo apt-get update && sudo apt-get install -y \
            libgtk-3-dev git clang curl libssl-dev llvm libudev-dev pkg-config
        if: startsWith(matrix.os, 'ubuntu')
      # - name: Install MacOS dependencies
      #   run: brew install cairo
      #   if: startsWith(matrix.os, 'macos')
      - uses: taiki-e/upload-rust-binary-action@v1
        with:
          # (required)
          # kindle-notes-core won't be built because it's a lib and not a bin
          bin: 'node-template'
          target: ${{ matrix.target }}
          # (optional) On which platform to distribute the `.tar.gz` file.
          # [default value: unix]
          # [possible values: all, unix, windows, none]
          tar: unix
          # (optional) On which platform to distribute the `.zip` file.
          # [default value: windows]
          # [possible values: all, unix, windows, none]
          # zip: windows
        env:
          # (required)
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
